[programmability and modularity]
To make it easy for MPI communication, a chromosome and its fitness value, unfitness value, etc., should be separate arrays. However, they are organized in a structure called Chrom for easy programming. Chrom is defined in ga.h and ga.c

[initial population generation and improvement]
A candidate solution in initial population is generated by randomly assigning a bin to each item. Therefore, the initial population contains infeasible solutions. For large problem size, too many infeasible solutions in candidate population could lead GA search into more random search with low solution quality. To improve the feasibility of initial population, two methods are used:
1. Chu and Beasley's feasibility improvement mechanism
For each bin, if its weight capacity is exceeded, randomly select an item from the bin and reassign it to another agent with sufficient capacity. Think about this: find all agents with sufficient capacity and randomly pick one. This is to avoid deterministic choices which could lead to premature solutions. 
2. Feltl and Raidl's constraint-ratio heuristic for solution generation
Constraint heuristic: to generate a solution, follow a random order (e.g., 0..n-1) of job, process a job. For this job, consider all the possible agents that the job could be assgined without violating the agent's weight capacity. Randomly choose such an agent for the job. Then go to next job.
Ratio heuristic: 

[Chu's solution quality improvement method]
Idea is to see if any item can be reassigned to 1) maintain capacity constraint; 2) reduce cost

[Difference of Chu, Feltl's GA from conventional GA]
Conventional GA:
 - selection strategy generates a mating pool whose size <= population size
 - for each individual in the pool, apply crossover prob; if two parents are found, crossover; if mutation prob is met, mutate. mutate and crossover are not assumed to happen on same chromosome.
 - this generates a offspring group whose size is <= mating pool size, because some of them are crossover and mutated, but some are not. A replacement strategy is used to put this many offspring into population and keep pop size the same
Chu's GA:
 - selection strategy generates two parents
 - crossover is performed on the two parents to generate only one child. first, randomly pick a cut-off point, then take first part of first parent and second part of second parent to form the child. next time, take first part of second parent and second part of first parent with equal probability.
 - mutation is performed on the child. randomly exchange two agents if they differ
 - the child is improved
 - the child is put back with a replacement strategy: unfitness or worst

[] GAPPGA's ejection chain strategy
Ejection chain is a strategy to create compound moves around a target solution in order to generate a new set of solutions. 

[] search order on feasibility improvement
The order that each bin is checked affects the results of feasibility improvement, in terms of the number of bins that could be improved.

----------Initial----------
       bin1 bin2 bin3
cap:   20   20   20
items: 11   13
       8    9    2
       4    7    5
weight:23   29   7    = 59
----------scenario 1--------
check bin1 first; reassign 8 to bin3; bin2 cannot be improved
       bin1 bin2 bin3
cap:   20   20   20
items:      13   8
       11   9    2
       4    7    5
weight:15   29   15    = 59
----------scenario 2--------
check bin2 first; reassign 9 to bin3; skip bin3 (under cap); check bin1; move 4 to bin3; number of bins improved: 2
       bin1 bin2 bin3
cap:   20   20   20
items: 11   13   9
       8         2
       4    7    5
weight:23   20   16    = 59
       bin1 bin2 bin3
cap:   20   20   20
items: 11   13   4
       8         9
            7    2
                 5
weight:19   20   20    = 59

